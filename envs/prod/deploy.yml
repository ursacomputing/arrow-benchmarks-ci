apiVersion: apps/v1
kind: Deployment
metadata:
  name: arrow-bci-deployment
spec:
  selector:
    matchLabels:
      app: arrow-bci
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: arrow-bci
    spec:
      containers:
      - name: arrow-bci
        image: "{{DOCKER_REGISTRY}}/{{FLASK_APP}}:{{BUILDKITE_COMMIT}}"
        command: ["gunicorn", "-b", "0.0.0.0:5000", "-w", "5", "app:app", "--access-logfile=-", "--error-logfile=-", "--preload"]
        imagePullPolicy: "Always"
        ports:
          - containerPort: 5000
        envFrom:
          - configMapRef:
              name: arrow-bci-config
          - secretRef:
              name: arrow-bci-secrets
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /health-check
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 2
          timeoutSeconds: 20
      terminationGracePeriodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    alb.ingress.kubernetes.io/target-type: ip
  name: "arrow-bci-service"
  namespace: "default"
spec:
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
  type: NodePort
  selector:
    app: "arrow-bci"
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: "arrow-bci-ingress"
  namespace: "default"
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn: {{CERTIFICATE_ARN}}
  labels:
    app: arrow-bci-ingress
spec:
  rules:
  - http:
      paths:
      - path: /*
        backend:
          serviceName: ssl-redirect
          servicePort: use-annotation
      - path: /*
        backend:
          serviceName: "arrow-bci-service"
          servicePort: 80
