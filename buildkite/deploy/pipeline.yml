steps:
  - label: "Build & Push"
    key: "build-and-push"
    concurrency: 1
    concurrency_group: "arrow-bci-deploy"
    command:
      - docker build -t ${FLASK_APP} .
      - docker tag ${FLASK_APP}:latest ${DOCKER_REGISTRY}/${FLASK_APP}:${BUILDKITE_COMMIT}
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${DOCKER_REGISTRY}
      - docker push ${DOCKER_REGISTRY}/${FLASK_APP}:${BUILDKITE_COMMIT}

  - label: "Run Migrations"
    key: "run-migrations"
    depends_on: "build-and-push"
    concurrency: 1
    concurrency_group: "arrow-bci-deploy"
    command:
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${DOCKER_REGISTRY}
      - docker pull ${DOCKER_REGISTRY}/${FLASK_APP}:${BUILDKITE_COMMIT}
      - docker-compose -f envs/prod/docker-compose.yml run app alembic upgrade head

  - label: "Deploy secrets and config"
    key: "deploy-secrets-and-config"
    depends_on: "run-migrations"
    concurrency: 1
    concurrency_group: "arrow-bci-deploy"
    command: |-
      aws eks --region us-east-2 update-kubeconfig --name ${EKS_CLUSTER}
      kubectl config set-context --current --namespace=${NAMESPACE}
      cat envs/prod/secrets.yml | sed "
        s/{{BUILDKITE_API_TOKEN}}/$(echo -n $BUILDKITE_API_TOKEN | base64)/g;
        s/{{DB_HOST}}/$(echo -n $DB_HOST | base64)/g;
        s/{{DB_NAME}}/$(echo -n $DB_NAME | base64)/g;
        s/{{DB_PASSWORD}}/$(echo -n $DB_PASSWORD | base64)/g;
        s/{{DB_USERNAME}}/$(echo -n $DB_USERNAME | base64)/g;
        s/{{GITHUB_API_TOKEN}}/$(echo -n $GITHUB_API_TOKEN | base64)/g;
        s/{{GITHUB_SECRET}}/$(echo -n $GITHUB_SECRET | base64)/g;
        s/{{SLACK_API_TOKEN}}/$(echo -n $SLACK_API_TOKEN | base64)/g;
        s/{{SLACK_CHANNEL_FOR_BENCHMARK_RESULTS}}/$(echo -n $SLACK_CHANNEL_FOR_BENCHMARK_RESULTS | base64)/g;
        s/{{SLACK_USER_ID_FOR_WARNINGS}}/$(echo -n $SLACK_USER_ID_FOR_WARNINGS | base64)/g" | kubectl apply -f -
#      - cat envs/prod/config.yml | sed "\
#        kubectl apply -f -

  - label: "Deploy CI API Server"
    key: "deploy-ci-api-server"
    depends_on: "deploy-secrets-and-config"
    concurrency: 1
    concurrency_group: "arrow-bci-deploy"
    command:
      - echo "WIP"

  - label: "Update Machine Configs"
    key: "update-machine-configs"
    depends_on: "deploy-ci-api-server"
    concurrency: 1
    concurrency_group: "arrow-bci-deploy"
    command:
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${DOCKER_REGISTRY}
      - docker pull ${DOCKER_REGISTRY}/${FLASK_APP}:${BUILDKITE_COMMIT}
      - docker-compose -f envs/prod/docker-compose.yml run app python -c 'from buildkite.deploy.update_machine_configs import update_machine_configs; update_machine_configs()'
